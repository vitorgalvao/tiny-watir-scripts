#!/usr/bin/env ruby

# Ensure watir is installed
begin
  require 'watir'
rescue Gem::LoadError
  puts 'watir isn’t installed. Installing it now…'
  system('gem install watir')
end

require 'yaml'
require 'date'

# Extend String to colorize messages
class String
  def colorize(color_code)
    "\e[#{color_code}m#{self}\e[0m"
  end

  def red
    colorize(31)
  end

  def green
    colorize(32)
  end
end

# usage
if ARGV[2].nil?
  abort 'instruções: pedir-gas <quantidade_de_garrafas> <daqui_a_quantos_dias_queres_a_entrega> <hora_da_entrega>'
end

# Variables
bottles_array = %w[pluma12k butano13k propano11k propano45k]
bottles_string = bottles_array.map { |b| "'#{b}'" }.join(', ')

bottle_quantity = ARGV[0]
delivery_days_from_today = ARGV[1].to_i
delivery_time = ARGV[2]

# Delivery details
details = "#{ENV['HOME']}/.config/pontoazul"

if File.exist?(details)
  request = YAML.load_file(details)

  abort "'Garrafas' is wrong. It’s value needs to be one of: #{bottles_string}.".red unless bottles_array.include? request['Garrafas'] # Check if 'Garrafas' has a valid value
else
  # Create new file template
  out_file = File.new(details, 'w')
  out_file.puts(%(---
Primeiro nome:
Apelido:
Morada:
Código postal:
Localidade:
NIF:
Email:
Telefone:
Garrafas: # Deixar um de: #{bottles_string}
Mensagem: # Opcional
...))
  out_file.close

  abort "Foi criado um ficheiro em '#{details}'. Preenche-o com os dados necessários para começar a usar este script.".red
end

# Start the browser, resize it (to use mobile version), and go to the page
browser_options = Selenium::WebDriver::Chrome::Options.new
browser_options.add_argument('--headless')
browser = Watir::Browser.new :chrome, options: browser_options
browser.window.resize_to(1400, 900)
browser.goto 'http://pontoazul.com.pt/encomendas.php'

# Fill details
postal_code = request['Código postal'].split('-')
delivery_date = (Date.today + delivery_days_from_today).strftime('%m/%d/%Y')

browser.text_field(id: 'Nome').set request['Primeiro nome']
browser.text_field(id: 'Apelido').set request['Apelido']
browser.text_field(id: 'Morada').set request['Morada']
browser.text_field(id: 'Codigo_Postal_1').set postal_code[0]
browser.text_field(id: 'Codigo_Postal').set postal_code[1]
browser.text_field(id: 'Localidade').set request['Localidade']
browser.text_field(id: 'NIF').set request['NIF']
browser.text_field(id: 'email').set request['Email']
browser.text_field(id: 'Telf').set request['Telefone']
browser.text_field(id: request['Garrafas']).set bottle_quantity
browser.text_field(id: 'datepicker').set delivery_date
browser.text_field(id: 'horario').set delivery_time
browser.textarea(id: 'Mensagem_Encomenda').set request['Mensagem']

browser.text_field(id: 'horario').click # So the datepicker closes and the send button becomes visible, hence clickable
browser.button(id: 'enviar').click
begin
  browser.div(text: /O seu pedido foi enviado com sucesso./).wait_until_present
rescue
  puts 'Houve um problema a enviar o pedido.'.red
  raise
else
  puts 'Pedido enviado com sucesso.'.green
end
browser.close
