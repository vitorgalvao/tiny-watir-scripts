#!/usr/bin/env ruby

# ensure watir is installed
begin
  require 'watir'
rescue Gem::LoadError
  puts 'watir isn’t installed. Installing it now…'
  system('gem install watir')
end

require 'yaml'

# extend String to colorize messages
class String
  def colorize(color_code)
    "\e[#{color_code}m#{self}\e[0m"
  end

  def red
    colorize(31)
  end

  def green
    colorize(32)
  end
end

# variables
leitura_normal = ARGV[0]
leitura_bi = ARGV[1]
leitura_tri = ARGV[2]

# details
details = "#{ENV['HOME']}/.config/edp"

if File.exist?(details)
  edp_values = YAML.load_file(details)
else
  # create new file template
  out_file = File.new(details, 'w')
  out_file.puts(%(---
Nome:
Telefone:
Email:
Electricidade:
    CPE: # complete, without spaces
    Opcao Horaria: # 'simples', 'bi', 'tri'
Gas natural:
    CUI: # not yet working
...))
  out_file.close

  abort "Foi criado um ficheiro em '#{details}'. Preenche-o com os dados necessários para começar a usar este script."
end

# check hourly option
hourly_option = edp_values['Electricidade']['Opcao Horaria'].downcase[0]

if (hourly_option == 's') && ARGV[0].nil? || (hourly_option == 'b') && ARGV[1].nil? || (hourly_option == 't') && ARGV[2].nil?
  abort "instruções: #{$PROGRAM_NAME} <contagem_simples> <contagem_bi-horária> <contagem_tri-horária>" + "\n" * 2 + 'Precisas de dar o número de contagens referente ao tipo de horário.'
end

# start the browser and go to the page
browser_options = Selenium::WebDriver::Chrome::Options.new
browser_options.add_argument('--headless')
browser = Watir::Browser.new :chrome, options: browser_options
browser.goto 'https://energia.edp.pt/particulares/apoio-ao-cliente/envio-de-leituras.aspx'

# personal details
browser.text_field(name: 'Nome').set edp_values['Nome']
browser.text_field(name: 'Telemóvel').set edp_values['Telefone']
browser.text_field(name: 'Email').set edp_values['Email']
browser.text_field(name: 'cpe1').set edp_values['Electricidade']['CPE']

# counting details
browser.select(name: 'horario').select_value hourly_option # set hourly option

browser.text_field(name: 'NormalLeitura').set leitura_normal
browser.text_field(name: 'EconomicoLeitura').set leitura_bi if (hourly_option == 'b') || (hourly_option == 't')
browser.text_field(name: 'SuperEconomicoLeitura').set leitura_tri if hourly_option == 't'

sleep 2 # wait a moment before clicking or it will be too fast and the site will think some fields are not filled
browser.link(class: 'send').click

# wait for a response to be given
begin
  browser.div(class: 'sucess-message').wait_until_present # 'sucess' is a typo on the site.
  puts 'Leitura enviada com sucesso.'.green

  browser.close
  exit 0
rescue Watir::Wait::TimeoutError
  puts browser.p(class: 'error-message').text.red

  browser.close
  exit 1
end
